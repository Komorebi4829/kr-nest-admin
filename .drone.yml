kind: pipeline
type: docker
name: kr-nest-admin

trigger:
    branch:
        - main

platform:
    os: linux
    arch: arm64

node:
    server: o18

steps:
    - name: build
      image: node:18.20-alpine
      volumes:
          - name: cache_admin
            path: /tmp/cache/admin
          - name: cache_api
            path: /tmp/cache/api
      commands:
          - node -v
          - npm i -g pnpm
          - pnpm i
          - pnpm run build
          - cp -r apps/admin/dist/* /tmp/cache/admin
          - cp -r apps/api/dist/* /tmp/cache/api

    - name: docker build
      image: plugins/docker
      settings:
          username: kentriver4829
          password:
              from_secret: docker_password
          repo: kentriver4829/my_app
          tags: kna
          context: ./apps/api
          dockerfile: ./apps/api/Dockerfile

      environment:
          DB_HOST:
              from_secret: DB_HOST
          DB_NAME:
              from_secret: DB_NAME
          DB_PASSWORD:
              from_secret: DB_PASSWORD
          DB_USERNAME:
              from_secret: DB_USERNAME

    - name: deploy
      image: plugins/docker
      commands:
          - docker login -u kentriver4829 -p ${DOCKER_PASSWORD}
          - docker pull kentriver4829/my_app:kna
          - docker run -d --name kr-nest-admin -p 3000:3000 --network pg --env DB_HOST=${DB_HOST} --env DB_NAME=${DB_NAME} --env DB_PASSWORD=${DB_PASSWORD} --env DB_USERNAME=${DB_USERNAME}  kentriver4829/my_app:kna
      environment:
          DB_HOST:
              from_secret: DB_HOST
          DB_NAME:
              from_secret: DB_NAME
          DB_PASSWORD:
              from_secret: DB_PASSWORD
          DB_USERNAME:
              from_secret: DB_USERNAME
          DOCKER_PASSWORD:
              from_secret: docker_password

volumes:
    - name: cache_admin
      host:
          path: /var/www/kr-nest-admin/admin
    - name: cache_api
      host:
          path: /var/www/kr-nest-admin/api
